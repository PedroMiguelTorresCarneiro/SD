package Main;

import java.awt.Color;
import javax.swing.DefaultListModel;


/**
 *
 * @author pedrocarneiro
 */
public class mainGUI extends javax.swing.JFrame {

    /**
     * Creates new form mainGUI
     */
    public mainGUI() {
        initComponents();
         // Initialize DefaultListModel for externalFIFO
        externalFIFO.setModel(new DefaultListModel<>());
        internalFIFO.setModel(new DefaultListModel<>());
        idcheckFIFO.setModel(new DefaultListModel<>());
        partyA_progress.setMinimum(0); // Set minimum value
        partyA_progress.setMaximum(100); // Set maximum value
        partyA_progress.setValue(0); // Set initial value
        partyB_progress.setMinimum(0); // Set minimum value
        partyB_progress.setMaximum(100); // Set maximum value
        partyB_progress.setValue(0); // Set initial value
        
        partyA_survey.setMinimum(0); // Set minimum value
        partyA_survey.setMaximum(100); // Set maximum value
        partyA_survey.setValue(0); // Set initial value
        partyB_survey.setMinimum(0); // Set minimum value
        partyB_survey.setMaximum(100); // Set maximum value
        partyB_survey.setValue(0); // Set initial value
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        startButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        votersSpinner = new javax.swing.JSpinner();
        pollingStationSpinner = new javax.swing.JSpinner();
        poolingStation = new javax.swing.JPanel();
        psStatus = new javax.swing.JLabel();
        idCheck = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        IDCHECK = new javax.swing.JLabel();
        clerk = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        VOTINGBOOTH = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        internalFIFO = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        idcheckFIFO = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        partyA_progress = new javax.swing.JProgressBar();
        partyB_progress = new javax.swing.JProgressBar();
        pollster = new javax.swing.JLabel();
        SURVEY = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        externalFIFO = new javax.swing.JList<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        partyB_survey = new javax.swing.JProgressBar();
        jLabel11 = new javax.swing.JLabel();
        partyA_survey = new javax.swing.JProgressBar();
        jLabel12 = new javax.swing.JLabel();
        spinnerMaxVotes = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(10, 10, 10));
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Nº of Voters");

        jLabel2.setText("Nº of PollingStation seats");

        votersSpinner.setModel(new javax.swing.SpinnerNumberModel(10, 3, 10, 1));

        pollingStationSpinner.setModel(new javax.swing.SpinnerNumberModel(5, 2, 5, 1));

        poolingStation.setBackground(new java.awt.Color(204, 255, 204));
        poolingStation.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        psStatus.setFont(new java.awt.Font("Helvetica Neue", 2, 24)); // NOI18N
        psStatus.setText("Closed");
        psStatus.setToolTipText("");

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 3, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 0));
        jLabel6.setText("ID check");

        IDCHECK.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        IDCHECK.setText("VOTER");
        IDCHECK.setMixingCutoutShape(null);

        clerk.setFont(new java.awt.Font("Helvetica Neue", 2, 18)); // NOI18N
        clerk.setText("Poll Clerk");

        javax.swing.GroupLayout idCheckLayout = new javax.swing.GroupLayout(idCheck);
        idCheck.setLayout(idCheckLayout);
        idCheckLayout.setHorizontalGroup(
            idCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(idCheckLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(idCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(idCheckLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(clerk, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(IDCHECK)))
                .addContainerGap(98, Short.MAX_VALUE))
        );
        idCheckLayout.setVerticalGroup(
            idCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(idCheckLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(58, 58, 58)
                .addGroup(idCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clerk)
                    .addComponent(IDCHECK, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 3, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 0));
        jLabel4.setText("e-voting booth");

        VOTINGBOOTH.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        VOTINGBOOTH.setText("Voter Place");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(VOTINGBOOTH))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(VOTINGBOOTH)
                .addGap(30, 30, 30))
        );

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 3, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 0));
        jLabel7.setText("Polling Station");

        jScrollPane6.setViewportView(internalFIFO);

        jScrollPane5.setViewportView(idcheckFIFO);

        javax.swing.GroupLayout poolingStationLayout = new javax.swing.GroupLayout(poolingStation);
        poolingStation.setLayout(poolingStationLayout);
        poolingStationLayout.setHorizontalGroup(
            poolingStationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(poolingStationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(poolingStationLayout.createSequentialGroup()
                .addGroup(poolingStationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(poolingStationLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(poolingStationLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 201, Short.MAX_VALUE)
                .addGroup(poolingStationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, poolingStationLayout.createSequentialGroup()
                        .addComponent(idCheck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, poolingStationLayout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(109, 109, 109))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, poolingStationLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(psStatus)
                .addGap(16, 16, 16))
        );
        poolingStationLayout.setVerticalGroup(
            poolingStationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(poolingStationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(psStatus)
                .addGap(18, 18, 18)
                .addGroup(poolingStationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(poolingStationLayout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addComponent(idCheck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addGroup(poolingStationLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jLabel7)
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel3.setText("B Party");

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 0, 36)); // NOI18N
        jLabel5.setText("ELECTION DAY");

        partyA_progress.setForeground(new java.awt.Color(255, 51, 51));

        pollster.setFont(new java.awt.Font("Helvetica Neue", 2, 18)); // NOI18N
        pollster.setText("Pollster");

        SURVEY.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        SURVEY.setText("SURVEY");

        jScrollPane4.setViewportView(externalFIFO);

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel8.setText("A Party");

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 1, 30)); // NOI18N
        jLabel9.setText("SURVEY RESULTS");

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 1, 30)); // NOI18N
        jLabel10.setText("ELECTION RESULTS");

        jLabel11.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel11.setText("B Party");

        partyA_survey.setForeground(new java.awt.Color(255, 51, 51));

        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel12.setText("A Party");

        spinnerMaxVotes.setModel(new javax.swing.SpinnerNumberModel(20, 10, 100, 5));

        jLabel13.setText("Stop Condition");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel11)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(partyA_survey, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(partyB_survey, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel12))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(SURVEY)
                                    .addComponent(pollster))))
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(partyA_progress, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                                .addComponent(partyB_progress, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(112, 112, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(poolingStation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(pollingStationSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(votersSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(spinnerMaxVotes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(spinnerMaxVotes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel2)
                                            .addComponent(pollingStationSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel1)
                                            .addComponent(votersSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(11, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(partyA_progress, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(partyB_progress, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SURVEY)
                                .addGap(28, 28, 28)
                                .addComponent(pollster)
                                .addGap(22, 22, 22))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(partyA_survey, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(partyB_survey, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(poolingStation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 9, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // Get the values from the spinners
        int numVoters = (int) votersSpinner.getValue();
        int maxCapacity = (int) pollingStationSpinner.getValue();
        int maxVotes = (int) spinnerMaxVotes.getValue();

        // Start the simulation in a new thread to avoid blocking the GUI
        new Thread(() -> {
            try {
                // Call the startSimulation method in Main with the spinner values
                Main.startSimulation(numVoters, maxCapacity, maxVotes);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }).start();
    }//GEN-LAST:event_startButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                mainGUI frame = new mainGUI();
                frame.setVisible(true);
                
            }
        });
    }
    
    
    // update the status of the polling Station
    public void logPOLLSTATION(String state){
        psStatus.setText(state);
    }
    
    
    // update the fifo with the voters inside of Polling Station
    public void logIDCHECK(String voter, char accepted){
        Color color = (accepted == '✔') ? Color.GREEN : Color.RED;
        IDCHECK.setForeground(color);
        IDCHECK.setText(voter);
    }
    
    // update the label containing the name of the VOter on ID CHECKING
    public void logSURVEY(String voter){
        SURVEY.setText(voter);
  
    }
    
    // updating the voter on e-voting booth
    public void logVOTING(String voter){
        VOTINGBOOTH.setText(voter);
    }
    
    // update fifo of Exit poll
    public void addExternalFIFO(String voter){
        DefaultListModel<String> model = (DefaultListModel<String>) externalFIFO.getModel();
        model.addElement(voter);
    }
    
    public void removeExternalFIFO(String voter) {
        DefaultListModel<String> model = (DefaultListModel<String>) externalFIFO.getModel();
        model.removeElement(voter); // Remove the specific voter by value
    }
    
    public void addInternalFIFO(String voter){
        DefaultListModel<String> model = (DefaultListModel<String>) internalFIFO.getModel();
        model.addElement(voter);
    }
    
    public void removeInternalFIFO(String voter){
        DefaultListModel<String> model = (DefaultListModel<String>) internalFIFO.getModel();
        model.removeElement(voter); // Remove the specific voter by value
    }
    
    public void addIdcheckFIFO(String voter){
        DefaultListModel<String> model = (DefaultListModel<String>) idcheckFIFO.getModel();
        model.addElement(voter);
    }
    
    public void removeIdcheckFIFO(String voter){
        DefaultListModel<String> model = (DefaultListModel<String>) idcheckFIFO.getModel();
        model.removeElement(voter); // Remove the specific voter by value
    }
    
    
    public void updatePartyA(int votes) {
        if (votes < 0) votes = 0;
        if (votes > partyA_progress.getMaximum()) votes = partyA_progress.getMaximum();
        partyA_progress.setValue(votes);
        partyA_progress.repaint(); // Force the progress bar to repaint
    }

    public void updatePartyB(int votes) {
        if (votes < 0) votes = 0;
        if (votes > partyB_progress.getMaximum()) votes = partyB_progress.getMaximum();
        partyB_progress.setValue(votes);
        
        partyB_progress.repaint(); // Force the progress bar to repaint
    }
    
    public void updatePartyA_survey(int votes) {
        if (votes < 0) votes = 0;
        if (votes > partyA_survey.getMaximum()) votes = partyA_survey.getMaximum();
        partyA_survey.setValue(votes);
        partyA_survey.repaint(); // Force the progress bar to repaint
    }

    public void updatePartyB_survey(int votes) {
        if (votes < 0) votes = 0;
        if (votes > partyB_survey.getMaximum()) votes = partyB_survey.getMaximum();
        partyB_survey.setValue(votes);
        
        partyB_survey.repaint(); // Force the progress bar to repaint
    }
    
    // updating the voter answering to pollster
    public void updateVoterPollster(){
        //answeringVoter.setText();
    }
    
    // updating the votes of A party
    public void updatePartyA(){
        // partyA_progress
    }
    
    // updating the votes of A party
    public void updatePartyB(){
        // partyB_progress
    }
    
    // update the table showing all places and where the voters are
    public void updateGeneralStatus(){
        // generalStatus
    }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel IDCHECK;
    private javax.swing.JLabel SURVEY;
    private javax.swing.JLabel VOTINGBOOTH;
    private javax.swing.JLabel clerk;
    public javax.swing.JList<String> externalFIFO;
    private javax.swing.JPanel idCheck;
    private javax.swing.JList<String> idcheckFIFO;
    private javax.swing.JList<String> internalFIFO;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JProgressBar partyA_progress;
    private javax.swing.JProgressBar partyA_survey;
    private javax.swing.JProgressBar partyB_progress;
    private javax.swing.JProgressBar partyB_survey;
    private javax.swing.JSpinner pollingStationSpinner;
    private javax.swing.JLabel pollster;
    private javax.swing.JPanel poolingStation;
    private javax.swing.JLabel psStatus;
    private javax.swing.JSpinner spinnerMaxVotes;
    private javax.swing.JButton startButton;
    private javax.swing.JSpinner votersSpinner;
    // End of variables declaration//GEN-END:variables
}
